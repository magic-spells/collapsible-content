!function(){"use strict";class t extends HTMLElement{constructor(){super()}connectedCallback(){this.hidden&&(this.style.height="0")}set hidden(t){t?(this.scrollHeight,this.offsetHeight,this.style.height="0"):this.style.height=`${this.scrollHeight}px`,t?this.setAttribute("hidden",""):this.removeAttribute("hidden")}get hidden(){return this.hasAttribute("hidden")}}class e extends HTMLElement{constructor(){super()}connectedCallback(){const t=this.querySelector("button"),e=this.querySelector("collapsible-content");if(!t||!e)return void console.error("CollapsibleComponent requires a <button> and a <collapsible-content>.");t.id||(t.id=`collapsible-button-${Math.random().toString(36).substr(2,9)}`),e.id||(e.id=`collapsible-content-${Math.random().toString(36).substr(2,9)}`),t.setAttribute("aria-controls",e.id),e.setAttribute("role","region"),e.setAttribute("aria-labelledby",t.id);let i="true"===t.getAttribute("aria-expanded");e.hidden=!i,t.addEventListener("click",(()=>{i=!i,t.setAttribute("aria-expanded",i),e.hidden=!i}))}}customElements.define("collapsible-content",t),customElements.define("collapsible-component",e)}();
